using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using ManualMapInjection.Injection;
using System.Net;
using System.IO;
using System.Diagnostics;
using injector;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;
using System.Threading;

namespace WindowsFormsApp2
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        string HWID;

        private void Form1_Load(object sender, EventArgs e)
        {
            HWID = System.Security.Principal.WindowsIdentity.GetCurrent().User.Value; 
            textBox1.Text = HWID;
            textBox1.ReadOnly = true;
            checkonline();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            checkonline();
            WebClient wb = new WebClient();
            string HWIDLIST = wb.DownloadString("  "); 
            if (HWIDLIST.Contains(textBox1.Text)) 
            {
              string mainpath = "C:\\Windows\\random.dll"; 
              
                
              string urlToDownload = wb.DownloadString("  ");

                if (string.IsNullOrEmpty(urlToDownload) || urlToDownload.Trim() == "")
                {
                    MessageBox.Show("Software em atualização, voltamos em breve.", "BLOODNIGHT", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    return;
                }


                var name = "hl"; 
                var target = Process.GetProcessesByName(name).FirstOrDefault();
                var path = mainpath;
                var file = File.ReadAllBytes(path);

                //Checking if the DLL isn't found
                if (!File.Exists(path))
                {
                    MessageBox.Show("Erro: Cheat não encontrado.");
                    return;
                }

                // Инжект
                injector.BasicInject.Inject(mainpath, "hl");
                Console.Read();
                
                MessageBox.Show("Carregado com sucesso! :]", "Bom game!", MessageBoxButtons.OK, MessageBoxIcon.Information);
                Application.Exit();
                // Delete cheat
                if (File.Exists(mainpath))
                {
                    File.Delete(mainpath);
                }
            }
            else
            {
                MessageBox.Show("Key não ativada no sistema! Acesso negado.","BLOODNIGHT");
            }
        }


        private bool VerifyHWID(string userHWID, string hwidList)
        {
            string[] hwids = hwidList.Split('\n');
            foreach (string hwid in hwids)
            {
                if (hwid.Trim().Equals(userHWID))
                {
                    return true;
                }
            }
            return false;
        }

        private void checkonline()
        {
            //Checking if the user can get a response from "https://google.com/"
            try
            {
                using (var client = new WebClient())
                {
                    using (client.OpenRead("https://google.com/"))
                    {
                        label1.ForeColor = Color.Green;
                        label1.Text = ("Online");
                    }
                }
            }
            catch
            {
                //If it does not get a response (This means the user is offline or google is down for some reason) it will Exit the application, you can stop this by removing "Application.Exit();"
                label1.ForeColor = Color.Red;
                label1.Text = ("Offline");
                Application.Exit();
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            Clipboard.SetText(HWID);
            MessageBox.Show("Chave-KEY copiada.", "BLOODNIGHT", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void label3_Click(object sender, EventArgs e)
        {

        }

        private void button3_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void label6_Click(object sender, EventArgs e)
        {

        }

        private void pictureBox2_Click(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void label7_Click(object sender, EventArgs e)
        {

        }

        private void label4_Click(object sender, EventArgs e)
        {

        }

        private void label5_Click(object sender, EventArgs e)
        {

        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }

        private void button4_Click(object sender, EventArgs e)
        {
            MessageBox.Show("------------------------- Lista de Comandos --------------------------\r\n\r\nRapid Fire - F2 (Segure o mouse do meio para disparar rápido)\r\n\r\nPerfect 180 turnaround - F3  (Pressione T para fazer o 180º)\r\n\r\nAK-47 - F4\r\n\r\nM4A1-S - F6\r\n\r\nM4A4 - F7\r\n\r\nFamas - F8\r\n\r\nGalil  - F9\r\n\r\nUMP-45 - F12\r\n\r\nAUG - Home\r\n\r\nSG 553 - End\r\n\r\nModificador de zoom AUG e SG 553 - ALT Esquerdo (Mantenha pressionado quando estiver no scope com AUG ou SG 553)\r\n\r\nDesativar No-Recoil - F11\r\n\r\nPanic button - F10 (Fechar macro)", "BLOODNIGHT", MessageBoxButtons.OK, MessageBoxIcon.Question);
        }
    }
}
